stages:
  - test # Run tests first
  - build # Run build after tests
  - deploy # Run deploy after build

services:
  - postgres:14.2-bullseye

variables:
  POSTGRES_PASSWORD: test
  DATABASE_URL: postgresql://fastfit:fastfit@postgres:5432
  SECRET_KEY: db0a49ab25db171089e1a3950f31f3288df643c7c33ede3f38d6bf7788569e24

backend-accounts-unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd backend/accounts/api
    - pip install -r requirements.txt
    - python -m pytest

backend-health-unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd backend/health/api
    - pip install -r requirements.txt
    - python -m pytest

backend-journals-unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd backend/journals/api
    - pip install -r requirements.txt
    - python -m pytest

backend-recipes-unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd backend/recipes/api
    - pip install -r requirements.txt
    - python -m pytest

backend-workouts-unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd backend/workouts/api
    - pip install -r requirements.txt
    - python -m pytest

lint-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 backend

build-front-end-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: node:lts-bullseye
  script:
    - cd frontend/fast-fit-frontend
    - npm install
    - npm install -D tailwindcss
    - npm install -D postcss
    - npm install -D autoprefixer
    - npm i chart.js
    - npm i --legacy-peer-deps react-chartjs-2
    - npm install --save chart.js react-chartjs-2
    - npm install -D date-fns
    - npm install date-streaks --save
    - npm run build
  artifacts:
    paths:
      - frontend/fast-fit-frontend/build/
