stages:
  - test # Run tests first
  - build # Run build after tests
  - deploy # Run deploy after build

services:
  - postgres:14.2-bullseye

# variables:
#   POSTGRES_PASSWORD: test
#   DATABASE_URL: postgresql://postgres:test@postgres:5432/postgres
#   SECRET_KEY: db0a49ab25db171089e1a3950f31f3288df643c7c33ede3f38d6bf7788569e24

backend-accounts-unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd backend/accounts/api
    - pip install -r requirements.txt
    - python -m pytest

# backend-health-unit-test-job:
#   image: python:3-bullseye
#   stage: test
#   script:
#     - cd backend/health/api
#     - pip install -r requirements.txt
#     - python -m pytest

backend-journals-unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd backend/journals/api
    - pip install -r requirements.txt
    - python -m pytest
# backend-recipes-unit-test-job:
#   image: python:3-bullseye
#   stage: test
#   script:
#     - cd backend/recipes/api
#     - pip install -r requirements.txt
#     - python -m pytest

# backend-workouts-unit-test-job:
#   image: python:3-bullseye
#   stage: test
#   script:
#     - cd backend/workouts/api
#     - pip install -r requirements.txt
#     - python -m pytest
# lint-job:
#   image: python:3-bullseye
#   stage: test
#   script:
#     - pip install flake8
#     - flake8 backend

# build-front-end-job:
#   stage: build
#   image: node:lts-bullseye
#   script:
#     - cd ghi
#     - npm install
#     - npm run build
