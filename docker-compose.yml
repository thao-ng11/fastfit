volumes:
  postgres-data:
    external: true
  pg-admin:
    external: true
services:
  react:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./frontend/fast-fit-frontend:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      REACT_APP_ACCOUNTS_HOST: http://localhost:8010
      REACT_APP_WORKOUTS_HOST: http://localhost:8020
      REACT_APP_RECIPES_HOST: http://localhost:8030
      REACT_APP_JOURNALS_HOST: http://localhost:8040
      REACT_APP_HEALTH_HOST: http://localhost:8050
      REACT_APP_EDAMAM_APP_ID: ${EDAMAM_APP_ID}
      REACT_APP_EDAMAM_RECIPE_API_KEY: ${EDAMAM_RECIPE_API_KEY}
      REACT_APP_GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
  pg-admin:
    image: dpage/pgadmin4
    volumes:
      - pg-admin:/var/lib/pgadmin
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: fastfit@example.com
      PGADMIN_DEFAULT_PASSWORD: fastfit
      PGADMIN_DISABLE_POSTFIX: 1    

  postgres:
    image: postgres:14.2-bullseye
    volumes:
      # for your initialization scripts
      - ./data/postgres/init:/docker-entrypoint-initdb.d
        # for the data stored by PostgreSQL
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_MULTIPLE_DATABASES=accounts,recipes,workouts,journals,health
      - POSTGRES_PASSWORD=fastfit
    ports:
      - 15432:5432

  accounts:
    build:
      context: ./backend/accounts/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8010:8000"
    volumes:
      - ./backend/accounts/api:/app
    depends_on:
      - postgres
    environment:
      SECRET_KEY: db0a49ab25db171089e1a3950f31f3288df643c7c33ede3f38d6bf7788569e24
      PGHOST: postgres
      DATABASE_URL: postgresql://fastfit:fastfit@postgres:5432/accounts
      PGDATABASE: accounts
      PGUSER: fastfit
      PGPASSWORD: fastfit

  workouts:
    build:
      context: ./backend/workouts/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8020:8000"
    volumes:
      - ./backend/workouts/api:/app
    depends_on:
      - postgres
    environment:
      SECRET_KEY: db0a49ab25db171089e1a3950f31f3288df643c7c33ede3f38d6bf7788569e24
      PGHOST: postgres
      DATABASE_URL: postgresql://fastfit:fastfit@postgres:5432/workouts
      PGDATABASE: workouts
      PGUSER: fastfit
      PGPASSWORD: fastfit

  recipes:
    build:
      context: ./backend/recipes/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8030:8000"
    volumes:
      - ./backend/recipes/api:/app
    depends_on:
      - postgres
    environment:
      SECRET_KEY: db0a49ab25db171089e1a3950f31f3288df643c7c33ede3f38d6bf7788569e24
      PGHOST: postgres
      DATABASE_URL: postgresql://fastfit:fastfit@postgres:5432/recipes
      PGDATABASE: recipes
      PGUSER: fastfit
      PGPASSWORD: fastfit

  journals:
    build:
      context: ./backend/journals/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8040:8000"
    volumes:
      - ./backend/journals/api:/app
    depends_on:
      - postgres
    environment:
      SECRET_KEY: db0a49ab25db171089e1a3950f31f3288df643c7c33ede3f38d6bf7788569e24
      PGHOST: postgres
      DATABASE_URL: postgresql://fastfit:fastfit@postgres:5432/journals
      PGDATABASE: journals
      PGUSER: fastfit
      PGPASSWORD: fastfit

  health:
    build:
      context: ./backend/health/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8050:8000"
    volumes:
      - ./backend/health/api:/app
    depends_on:
      - postgres
    environment:
      SECRET_KEY: db0a49ab25db171089e1a3950f31f3288df643c7c33ede3f38d6bf7788569e24
      PGHOST: postgres
      DATABASE_URL: postgresql://fastfit:fastfit@postgres:5432/health
      PGDATABASE: health
      PGUSER: fastfit
      PGPASSWORD: fastfit